@page "/Dashboard"
@attribute [Authorize]
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigationManager
<h3 id="welcome">Search for tickers</h3>

<div><input id="welcome" type="text" @bind="@val" @oninput="@((e) => { if(((string)e.Value).Length != 0)@val=(string)e.Value; })" /><br>
<button @onclick="@(() => { OnChangeTickers(); click = true; })">Szukaj</button></div>

@if (val != null && tickers == null && click == true)
{
                <p><em>Loading...</em></p>
}
else if(tickers != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Ticker</th>
                <th>Name</th>
                <th>Market</th>
                <th>Locale</th>
                <th>Type</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ticker in tickers)
            {
                <tr id="data" @onclick="@(() => { OpenDetails(ticker.ticker); })">
                    <td>@ticker.ticker</td>
                    <td>@ticker.name</td>
                    <td>@ticker.market</td>
                    <td>@ticker.locale</td>
                    <td>@ticker.type</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private TickerSearch[] tickers;
    private string user;
    private string val;
    private bool click = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User.Identity.Name;

        try
        {
            tickers = null;
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private async void OnChangeTickers()
    {
        if (val != null && val.Length != 0)
        {
            tickers = await Http.GetFromJsonAsync<TickerSearch[]>($"/tickers/{val}");
        }
        click = false;
    }

    private void OpenDetails(string id)
    {
        navigationManager.NavigateTo($"/details/{id}");
    }
}
