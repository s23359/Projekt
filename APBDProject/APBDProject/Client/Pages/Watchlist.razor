@page "/watchlist"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using APBDProject.Shared.Models
@using Syncfusion.Blazor.Grids
@attribute [Authorize]
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http

<h3 id="welcome">Your watchlist:</h3>
@if (tickers == null)
{
    <div>Looks like your watchlist is empty. Go to dashboard and select the ones that you want to see in your watchlist.</div>
}
else
{
    <SfGrid DataSource="@tickers" AllowPaging="true" AllowSorting="true">
        <GridPageSettings PageSize="5"></GridPageSettings>
        <GridColumns>
            <GridColumn Field=@nameof(TickerInfo.ticker) HeaderText="Ticker" TextAlign="TextAlign.Center" Width="100"></GridColumn>
            <GridColumn Field=@nameof(TickerInfo.name) HeaderText="Name" TextAlign="TextAlign.Center" Width="100"></GridColumn>
            <GridColumn Field=@nameof(TickerInfo.market) HeaderText="Market" TextAlign="TextAlign.Center" Width="100"></GridColumn>
            <GridColumn Field=@nameof(TickerInfo.locale) HeaderText="Locale" TextAlign="TextAlign.Center" Width="100"></GridColumn>
        </GridColumns>
    </SfGrid>
}

@code {
    private string user;
    private TickerInfo[] tickers;

    protected override async Task OnInitializedAsync()
    {

        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            user = authState.User.Identity.Name;
            tickers = await Http.GetFromJsonAsync<TickerInfo[]>($"/watchlist/{user}");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
    private async Task RemoveFromWatchlist(TickerInfo ticker)
    {
        var response = await Http.PostAsJsonAsync($"/watchlist/delete/{user}", ticker);

        tickers = await Http.GetFromJsonAsync<TickerInfo[]>($"/watchlist/{user}");
    }
}
